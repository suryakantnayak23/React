{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\LENOVO\\\\Downloads\\\\form_pilot_assignment\\\\todo-app\\\\src\\\\App.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Container, Row, Col, Card, Alert, Form, Button } from 'react-bootstrap';\nimport { ToastContainer, toast } from 'react-toastify';\nimport TodoForm from './components/TodoForm';\nimport TodoList from './components/TodoList';\nimport './App.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport 'react-toastify/dist/ReactToastify.css';\n\n// Import the Crublibrary - this is linked from our local package\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Crublibrary = require('your-formpilot-crud');\nconst App = () => {\n  _s();\n  const [todos, setTodos] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [creditsExhausted, setCreditsExhausted] = useState(false);\n  const [credentials, setCredentials] = useState({\n    apiUrl: localStorage.getItem('CRUD_API_URL') || '',\n    apiKey: localStorage.getItem('CRUD_API_KEY') || ''\n  });\n  const [isConfigured, setIsConfigured] = useState(false);\n\n  // Load saved credentials on component mount\n  useEffect(() => {\n    const savedApiUrl = localStorage.getItem('CRUD_API_URL');\n    const savedApiKey = localStorage.getItem('CRUD_API_KEY');\n    if (savedApiUrl && savedApiKey) {\n      setCredentials({\n        apiUrl: savedApiUrl,\n        apiKey: savedApiKey\n      });\n      setIsConfigured(true);\n\n      // Set the credentials on the Crublibrary\n      Crublibrary.setCredentials(savedApiUrl, savedApiKey);\n    }\n    setLoading(false);\n  }, []);\n\n  // Handle API errors\n  const handleApiError = err => {\n    console.error('API Error:', err);\n    const errorMessage = err.message || 'An unknown error occurred';\n\n    // Check if the error is due to exhausted credits\n    if (errorMessage.includes('Request limit exceeded')) {\n      setCreditsExhausted(true);\n      toast.error('Credits exhausted. Please recharge by mailing support.');\n    } else {\n      toast.error(errorMessage);\n    }\n    setError(errorMessage);\n  };\n\n  // Save API credentials\n  const saveCredentials = () => {\n    try {\n      if (!credentials.apiUrl || !credentials.apiKey) {\n        toast.error('Please enter both API URL and API Key');\n        return;\n      }\n\n      // Save to localStorage\n      localStorage.setItem('CRUD_API_URL', credentials.apiUrl);\n      localStorage.setItem('CRUD_API_KEY', credentials.apiKey);\n\n      // Set the credentials on the Crublibrary\n      Crublibrary.setCredentials(credentials.apiUrl, credentials.apiKey);\n      setIsConfigured(true);\n      toast.success('API credentials saved successfully!');\n    } catch (err) {\n      toast.error('Failed to save credentials');\n      console.error(err);\n    }\n  };\n\n  // Create a new todo\n  const createTodo = async (value, txHash) => {\n    try {\n      setError(null);\n      const response = await Crublibrary.create({\n        value,\n        txHash\n      });\n      const newTodo = {\n        id: response.id,\n        value,\n        txHash\n      };\n      setTodos([...todos, newTodo]);\n      toast.success('Todo created successfully!');\n    } catch (err) {\n      handleApiError(err);\n    }\n  };\n\n  // Get a todo by ID\n  const getTodo = async id => {\n    try {\n      setError(null);\n      const todo = await Crublibrary.get(id);\n      return todo;\n    } catch (err) {\n      handleApiError(err);\n      return null;\n    }\n  };\n\n  // Update a todo\n  const updateTodo = async (id, value, txHash) => {\n    try {\n      setError(null);\n      await Crublibrary.update(id, {\n        value,\n        txHash\n      });\n      setTodos(todos.map(todo => todo.id === id ? {\n        ...todo,\n        value,\n        txHash\n      } : todo));\n      toast.success('Todo updated successfully!');\n    } catch (err) {\n      handleApiError(err);\n    }\n  };\n\n  // Delete a todo\n  const deleteTodo = async id => {\n    try {\n      setError(null);\n      await Crublibrary.delete(id);\n      setTodos(todos.filter(todo => todo.id !== id));\n      toast.success('Todo deleted successfully!');\n    } catch (err) {\n      handleApiError(err);\n    }\n  };\n\n  // Reset configuration\n  const resetConfiguration = () => {\n    localStorage.removeItem('CRUD_API_URL');\n    localStorage.removeItem('CRUD_API_KEY');\n    setCredentials({\n      apiUrl: '',\n      apiKey: ''\n    });\n    setIsConfigured(false);\n    setTodos([]);\n    toast.info('Configuration reset');\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(Container, {\n      className: \"mt-5\",\n      children: /*#__PURE__*/_jsxDEV(Row, {\n        className: \"justify-content-center\",\n        children: /*#__PURE__*/_jsxDEV(Col, {\n          md: 8,\n          children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n            className: \"text-center mb-4\",\n            children: \"Todo App\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 162,\n            columnNumber: 13\n          }, this), !isConfigured ? /*#__PURE__*/_jsxDEV(Card, {\n            className: \"shadow-sm mb-4\",\n            children: /*#__PURE__*/_jsxDEV(Card.Body, {\n              children: [/*#__PURE__*/_jsxDEV(Card.Title, {\n                children: \"Configure API Credentials\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 167,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"text-muted\",\n                children: \"Enter the API URL and API Key from your CRUD API Platform account. These should have been emailed to you after signing up.\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 168,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Form, {\n                children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n                  className: \"mb-3\",\n                  children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                    children: \"API URL\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 175,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                    type: \"text\",\n                    placeholder: \"http://localhost:3000/api\",\n                    value: credentials.apiUrl,\n                    onChange: e => setCredentials({\n                      ...credentials,\n                      apiUrl: e.target.value\n                    })\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 176,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 174,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n                  className: \"mb-3\",\n                  children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                    children: \"API Key\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 185,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                    type: \"text\",\n                    placeholder: \"your-api-key\",\n                    value: credentials.apiKey,\n                    onChange: e => setCredentials({\n                      ...credentials,\n                      apiKey: e.target.value\n                    })\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 186,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 184,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"d-grid\",\n                  children: /*#__PURE__*/_jsxDEV(Button, {\n                    variant: \"primary\",\n                    onClick: saveCredentials,\n                    children: \"Save Credentials\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 195,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 194,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 173,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 166,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 165,\n            columnNumber: 15\n          }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [creditsExhausted && /*#__PURE__*/_jsxDEV(Alert, {\n              variant: \"warning\",\n              className: \"mb-4\",\n              children: [/*#__PURE__*/_jsxDEV(Alert.Heading, {\n                children: \"Credits Exhausted\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 206,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: [\"Your API credits have been exhausted. Please recharge by mailing support at: \", /*#__PURE__*/_jsxDEV(\"strong\", {\n                  children: \"support@yourapp.com\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 208,\n                  columnNumber: 100\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 207,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"mb-0\",\n                children: [\"Email subject should be: \", /*#__PURE__*/_jsxDEV(\"strong\", {\n                  children: \"Please recharge my credits\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 211,\n                  columnNumber: 48\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 210,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 205,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(Card, {\n              className: \"shadow-sm mb-4\",\n              children: /*#__PURE__*/_jsxDEV(Card.Body, {\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"d-flex justify-content-between align-items-center mb-3\",\n                  children: [/*#__PURE__*/_jsxDEV(Card.Title, {\n                    children: \"Add New Todo\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 219,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(Button, {\n                    variant: \"outline-secondary\",\n                    size: \"sm\",\n                    onClick: resetConfiguration,\n                    children: \"Change API Credentials\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 220,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 218,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(TodoForm, {\n                  onSubmit: createTodo,\n                  disabled: creditsExhausted\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 228,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 217,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 216,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Card, {\n              className: \"shadow-sm\",\n              children: /*#__PURE__*/_jsxDEV(Card.Body, {\n                children: [/*#__PURE__*/_jsxDEV(Card.Title, {\n                  children: \"Your Todos\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 234,\n                  columnNumber: 21\n                }, this), loading ? /*#__PURE__*/_jsxDEV(\"p\", {\n                  className: \"text-center\",\n                  children: \"Loading...\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 236,\n                  columnNumber: 23\n                }, this) : /*#__PURE__*/_jsxDEV(TodoList, {\n                  todos: todos,\n                  onUpdate: updateTodo,\n                  onDelete: deleteTodo,\n                  disabled: creditsExhausted\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 238,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 233,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 232,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 161,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ToastContainer, {\n      position: \"bottom-right\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 252,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 158,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"yxR1fOP0FbP5A8plZXsi/ln2MEo=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","Container","Row","Col","Card","Alert","Form","Button","ToastContainer","toast","TodoForm","TodoList","jsxDEV","_jsxDEV","Fragment","_Fragment","Crublibrary","require","App","_s","todos","setTodos","loading","setLoading","error","setError","creditsExhausted","setCreditsExhausted","credentials","setCredentials","apiUrl","localStorage","getItem","apiKey","isConfigured","setIsConfigured","savedApiUrl","savedApiKey","handleApiError","err","console","errorMessage","message","includes","saveCredentials","setItem","success","createTodo","value","txHash","response","create","newTodo","id","getTodo","todo","get","updateTodo","update","map","deleteTodo","delete","filter","resetConfiguration","removeItem","info","className","children","md","fileName","_jsxFileName","lineNumber","columnNumber","Body","Title","Group","Label","Control","type","placeholder","onChange","e","target","variant","onClick","Heading","size","onSubmit","disabled","onUpdate","onDelete","position","_c","$RefreshReg$"],"sources":["C:/Users/LENOVO/Downloads/form_pilot_assignment/todo-app/src/App.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { Container, Row, Col, Card, Alert, Form, Button } from 'react-bootstrap';\r\nimport { ToastContainer, toast } from 'react-toastify';\r\nimport TodoForm from './components/TodoForm';\r\nimport TodoList from './components/TodoList';\r\nimport './App.css';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\n\r\n// Import the Crublibrary - this is linked from our local package\r\nconst Crublibrary = require('your-formpilot-crud');\r\n\r\ninterface Todo {\r\n  id: string;\r\n  value: number;\r\n  txHash: string;\r\n}\r\n\r\ninterface ApiCredentials {\r\n  apiUrl: string;\r\n  apiKey: string;\r\n}\r\n\r\nconst App: React.FC = () => {\r\n  const [todos, setTodos] = useState<Todo[]>([]);\r\n  const [loading, setLoading] = useState<boolean>(true);\r\n  const [error, setError] = useState<string | null>(null);\r\n  const [creditsExhausted, setCreditsExhausted] = useState<boolean>(false);\r\n  const [credentials, setCredentials] = useState<ApiCredentials>({\r\n    apiUrl: localStorage.getItem('CRUD_API_URL') || '',\r\n    apiKey: localStorage.getItem('CRUD_API_KEY') || ''\r\n  });\r\n  const [isConfigured, setIsConfigured] = useState<boolean>(false);\r\n\r\n  // Load saved credentials on component mount\r\n  useEffect(() => {\r\n    const savedApiUrl = localStorage.getItem('CRUD_API_URL');\r\n    const savedApiKey = localStorage.getItem('CRUD_API_KEY');\r\n    \r\n    if (savedApiUrl && savedApiKey) {\r\n      setCredentials({\r\n        apiUrl: savedApiUrl,\r\n        apiKey: savedApiKey\r\n      });\r\n      setIsConfigured(true);\r\n      \r\n      // Set the credentials on the Crublibrary\r\n      Crublibrary.setCredentials(savedApiUrl, savedApiKey);\r\n    }\r\n    \r\n    setLoading(false);\r\n  }, []);\r\n\r\n  // Handle API errors\r\n  const handleApiError = (err: any) => {\r\n    console.error('API Error:', err);\r\n    const errorMessage = err.message || 'An unknown error occurred';\r\n    \r\n    // Check if the error is due to exhausted credits\r\n    if (errorMessage.includes('Request limit exceeded')) {\r\n      setCreditsExhausted(true);\r\n      toast.error('Credits exhausted. Please recharge by mailing support.');\r\n    } else {\r\n      toast.error(errorMessage);\r\n    }\r\n    \r\n    setError(errorMessage);\r\n  };\r\n\r\n  // Save API credentials\r\n  const saveCredentials = () => {\r\n    try {\r\n      if (!credentials.apiUrl || !credentials.apiKey) {\r\n        toast.error('Please enter both API URL and API Key');\r\n        return;\r\n      }\r\n      \r\n      // Save to localStorage\r\n      localStorage.setItem('CRUD_API_URL', credentials.apiUrl);\r\n      localStorage.setItem('CRUD_API_KEY', credentials.apiKey);\r\n      \r\n      // Set the credentials on the Crublibrary\r\n      Crublibrary.setCredentials(credentials.apiUrl, credentials.apiKey);\r\n      \r\n      setIsConfigured(true);\r\n      toast.success('API credentials saved successfully!');\r\n    } catch (err) {\r\n      toast.error('Failed to save credentials');\r\n      console.error(err);\r\n    }\r\n  };\r\n\r\n  // Create a new todo\r\n  const createTodo = async (value: number, txHash: string) => {\r\n    try {\r\n      setError(null);\r\n      const response = await Crublibrary.create({ value, txHash });\r\n      const newTodo = { id: response.id, value, txHash };\r\n      setTodos([...todos, newTodo]);\r\n      toast.success('Todo created successfully!');\r\n    } catch (err: any) {\r\n      handleApiError(err);\r\n    }\r\n  };\r\n\r\n  // Get a todo by ID\r\n  const getTodo = async (id: string) => {\r\n    try {\r\n      setError(null);\r\n      const todo = await Crublibrary.get(id);\r\n      return todo;\r\n    } catch (err: any) {\r\n      handleApiError(err);\r\n      return null;\r\n    }\r\n  };\r\n\r\n  // Update a todo\r\n  const updateTodo = async (id: string, value: number, txHash: string) => {\r\n    try {\r\n      setError(null);\r\n      await Crublibrary.update(id, { value, txHash });\r\n      setTodos(todos.map(todo => \r\n        todo.id === id ? { ...todo, value, txHash } : todo\r\n      ));\r\n      toast.success('Todo updated successfully!');\r\n    } catch (err: any) {\r\n      handleApiError(err);\r\n    }\r\n  };\r\n\r\n  // Delete a todo\r\n  const deleteTodo = async (id: string) => {\r\n    try {\r\n      setError(null);\r\n      await Crublibrary.delete(id);\r\n      setTodos(todos.filter(todo => todo.id !== id));\r\n      toast.success('Todo deleted successfully!');\r\n    } catch (err: any) {\r\n      handleApiError(err);\r\n    }\r\n  };\r\n\r\n  // Reset configuration\r\n  const resetConfiguration = () => {\r\n    localStorage.removeItem('CRUD_API_URL');\r\n    localStorage.removeItem('CRUD_API_KEY');\r\n    setCredentials({\r\n      apiUrl: '',\r\n      apiKey: ''\r\n    });\r\n    setIsConfigured(false);\r\n    setTodos([]);\r\n    toast.info('Configuration reset');\r\n  };\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <Container className=\"mt-5\">\r\n        <Row className=\"justify-content-center\">\r\n          <Col md={8}>\r\n            <h1 className=\"text-center mb-4\">Todo App</h1>\r\n            \r\n            {!isConfigured ? (\r\n              <Card className=\"shadow-sm mb-4\">\r\n                <Card.Body>\r\n                  <Card.Title>Configure API Credentials</Card.Title>\r\n                  <p className=\"text-muted\">\r\n                    Enter the API URL and API Key from your CRUD API Platform account. \r\n                    These should have been emailed to you after signing up.\r\n                  </p>\r\n                  \r\n                  <Form>\r\n                    <Form.Group className=\"mb-3\">\r\n                      <Form.Label>API URL</Form.Label>\r\n                      <Form.Control \r\n                        type=\"text\" \r\n                        placeholder=\"http://localhost:3000/api\" \r\n                        value={credentials.apiUrl}\r\n                        onChange={(e) => setCredentials({...credentials, apiUrl: e.target.value})}\r\n                      />\r\n                    </Form.Group>\r\n                    \r\n                    <Form.Group className=\"mb-3\">\r\n                      <Form.Label>API Key</Form.Label>\r\n                      <Form.Control \r\n                        type=\"text\" \r\n                        placeholder=\"your-api-key\" \r\n                        value={credentials.apiKey}\r\n                        onChange={(e) => setCredentials({...credentials, apiKey: e.target.value})}\r\n                      />\r\n                    </Form.Group>\r\n                    \r\n                    <div className=\"d-grid\">\r\n                      <Button variant=\"primary\" onClick={saveCredentials}>\r\n                        Save Credentials\r\n                      </Button>\r\n                    </div>\r\n                  </Form>\r\n                </Card.Body>\r\n              </Card>\r\n            ) : (\r\n              <>\r\n                {creditsExhausted && (\r\n                  <Alert variant=\"warning\" className=\"mb-4\">\r\n                    <Alert.Heading>Credits Exhausted</Alert.Heading>\r\n                    <p>\r\n                      Your API credits have been exhausted. Please recharge by mailing support at: <strong>support@yourapp.com</strong>\r\n                    </p>\r\n                    <p className=\"mb-0\">\r\n                      Email subject should be: <strong>Please recharge my credits</strong>\r\n                    </p>\r\n                  </Alert>\r\n                )}\r\n\r\n                <Card className=\"shadow-sm mb-4\">\r\n                  <Card.Body>\r\n                    <div className=\"d-flex justify-content-between align-items-center mb-3\">\r\n                      <Card.Title>Add New Todo</Card.Title>\r\n                      <Button \r\n                        variant=\"outline-secondary\" \r\n                        size=\"sm\"\r\n                        onClick={resetConfiguration}\r\n                      >\r\n                        Change API Credentials\r\n                      </Button>\r\n                    </div>\r\n                    <TodoForm onSubmit={createTodo} disabled={creditsExhausted} />\r\n                  </Card.Body>\r\n                </Card>\r\n\r\n                <Card className=\"shadow-sm\">\r\n                  <Card.Body>\r\n                    <Card.Title>Your Todos</Card.Title>\r\n                    {loading ? (\r\n                      <p className=\"text-center\">Loading...</p>\r\n                    ) : (\r\n                      <TodoList \r\n                        todos={todos} \r\n                        onUpdate={updateTodo}\r\n                        onDelete={deleteTodo}\r\n                        disabled={creditsExhausted}\r\n                      />\r\n                    )}\r\n                  </Card.Body>\r\n                </Card>\r\n              </>\r\n            )}\r\n          </Col>\r\n        </Row>\r\n      </Container>\r\n      <ToastContainer position=\"bottom-right\" />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default App; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}