{"ast":null,"code":"/**\r\n * FormPilot CRUD Library\r\n * A simple library to perform CRUD operations using localStorage in browser\r\n * or memory in Node.js environment\r\n */\n\n// Storage for Node.js environment\nlet memoryStorage = {};\n\n// Initialize storage\nconst initStorage = () => {\n  if (typeof window !== 'undefined' && window.localStorage) {\n    // Browser environment\n    if (!localStorage.getItem('formpilot_items')) {\n      localStorage.setItem('formpilot_items', JSON.stringify({}));\n    }\n  } else {\n    // Node.js environment\n    if (!memoryStorage.formpilot_items) {\n      memoryStorage.formpilot_items = {};\n    }\n  }\n};\n\n// Get all items\nconst getAllItems = () => {\n  initStorage();\n  if (typeof window !== 'undefined' && window.localStorage) {\n    // Browser environment\n    return JSON.parse(localStorage.getItem('formpilot_items') || '{}');\n  } else {\n    // Node.js environment\n    return memoryStorage.formpilot_items || {};\n  }\n};\n\n// Save all items\nconst saveAllItems = items => {\n  if (typeof window !== 'undefined' && window.localStorage) {\n    // Browser environment\n    localStorage.setItem('formpilot_items', JSON.stringify(items));\n  } else {\n    // Node.js environment\n    memoryStorage.formpilot_items = items;\n  }\n};\n\n// Get user from storage\nconst getUser = () => {\n  if (typeof window !== 'undefined' && window.localStorage) {\n    // Browser environment\n    try {\n      return JSON.parse(localStorage.getItem('user') || '{}');\n    } catch (error) {\n      return {};\n    }\n  } else {\n    // Node.js environment\n    return memoryStorage.user || {\n      apiKey: process.env.CRUD_API_KEY,\n      credits: 100\n    };\n  }\n};\n\n// Save user to storage\nconst saveUser = user => {\n  if (typeof window !== 'undefined' && window.localStorage) {\n    // Browser environment\n    localStorage.setItem('user', JSON.stringify(user));\n  } else {\n    // Node.js environment\n    memoryStorage.user = user;\n  }\n};\n\n// Generate a unique ID\nconst generateId = () => {\n  return Math.floor(Math.random() * 100000).toString();\n};\n\n/**\r\n * Create a new item\r\n * @param {Object} data - Data to create\r\n * @returns {Object} - Status response\r\n */\nconst create = async data => {\n  try {\n    // Check if credentials exist\n    const user = getUser();\n    if (!user.apiKey) {\n      return {\n        error: 'Not authenticated. Please provide valid API credentials.'\n      };\n    }\n\n    // Decrement credits\n    if (user.credits <= 0) {\n      return {\n        error: 'Insufficient credits. Please recharge your credits.'\n      };\n    }\n\n    // Update credits\n    user.credits--;\n    saveUser(user);\n\n    // Create a new item\n    const items = getAllItems();\n    const id = generateId();\n    items[id] = {\n      ...data,\n      id,\n      createdAt: new Date().toISOString()\n    };\n    saveAllItems(items);\n    return {\n      id,\n      status: \"created successfully\"\n    };\n  } catch (error) {\n    console.error('Create operation failed:', error);\n    return {\n      error: 'Failed to create item'\n    };\n  }\n};\n\n/**\r\n * Get an item by ID\r\n * @param {string} id - Item ID\r\n * @returns {Object} - Item data\r\n */\nconst get = async id => {\n  try {\n    // Check if credentials exist\n    const user = getUser();\n    if (!user.apiKey) {\n      return {\n        error: 'Not authenticated. Please provide valid API credentials.'\n      };\n    }\n\n    // Get item\n    const items = getAllItems();\n    const item = items[id];\n    if (!item) {\n      return {\n        error: 'Item not found'\n      };\n    }\n    return item;\n  } catch (error) {\n    console.error('Get operation failed:', error);\n    return {\n      error: 'Failed to get item'\n    };\n  }\n};\n\n/**\r\n * Update an item by ID\r\n * @param {string} id - Item ID\r\n * @param {Object} data - Updated data\r\n * @returns {Object} - Status response\r\n */\nconst update = async (id, data) => {\n  try {\n    // Check if credentials exist\n    const user = getUser();\n    if (!user.apiKey) {\n      return {\n        error: 'Not authenticated. Please provide valid API credentials.'\n      };\n    }\n\n    // Decrement credits\n    if (user.credits <= 0) {\n      return {\n        error: 'Insufficient credits. Please recharge your credits.'\n      };\n    }\n\n    // Update credits\n    user.credits--;\n    saveUser(user);\n\n    // Update item\n    const items = getAllItems();\n    if (!items[id]) {\n      return {\n        error: 'Item not found'\n      };\n    }\n    items[id] = {\n      ...items[id],\n      ...data,\n      updatedAt: new Date().toISOString()\n    };\n    saveAllItems(items);\n    return {\n      status: \"updated successfully\"\n    };\n  } catch (error) {\n    console.error('Update operation failed:', error);\n    return {\n      error: 'Failed to update item'\n    };\n  }\n};\n\n/**\r\n * Delete an item by ID\r\n * @param {string} id - Item ID\r\n * @returns {Object} - Status response\r\n */\nconst delete_ = async id => {\n  try {\n    // Check if credentials exist\n    const user = getUser();\n    if (!user.apiKey) {\n      return {\n        error: 'Not authenticated. Please provide valid API credentials.'\n      };\n    }\n\n    // Decrement credits\n    if (user.credits <= 0) {\n      return {\n        error: 'Insufficient credits. Please recharge your credits.'\n      };\n    }\n\n    // Update credits\n    user.credits--;\n    saveUser(user);\n\n    // Delete item\n    const items = getAllItems();\n    if (!items[id]) {\n      return {\n        error: 'Item not found'\n      };\n    }\n    delete items[id];\n    saveAllItems(items);\n    return {\n      status: \"deleted successfully\"\n    };\n  } catch (error) {\n    console.error('Delete operation failed:', error);\n    return {\n      error: 'Failed to delete item'\n    };\n  }\n};\n\n// Module exports\nmodule.exports = {\n  create,\n  get,\n  update,\n  delete: delete_\n};\n\n// If using in browser directly\nif (typeof window !== 'undefined') {\n  window.Crublibrary = {\n    create,\n    get,\n    update,\n    delete: delete_\n  };\n}","map":{"version":3,"names":["memoryStorage","initStorage","window","localStorage","getItem","setItem","JSON","stringify","formpilot_items","getAllItems","parse","saveAllItems","items","getUser","error","user","apiKey","process","env","CRUD_API_KEY","credits","saveUser","generateId","Math","floor","random","toString","create","data","id","createdAt","Date","toISOString","status","console","get","item","update","updatedAt","delete_","module","exports","delete","Crublibrary"],"sources":["C:/Users/LENOVO/Downloads/form_pilot_assignment/crud-platform/npm-package/your-formpilot-crud/index.js"],"sourcesContent":["/**\r\n * FormPilot CRUD Library\r\n * A simple library to perform CRUD operations using localStorage in browser\r\n * or memory in Node.js environment\r\n */\r\n\r\n// Storage for Node.js environment\r\nlet memoryStorage = {};\r\n\r\n// Initialize storage\r\nconst initStorage = () => {\r\n  if (typeof window !== 'undefined' && window.localStorage) {\r\n    // Browser environment\r\n    if (!localStorage.getItem('formpilot_items')) {\r\n      localStorage.setItem('formpilot_items', JSON.stringify({}));\r\n    }\r\n  } else {\r\n    // Node.js environment\r\n    if (!memoryStorage.formpilot_items) {\r\n      memoryStorage.formpilot_items = {};\r\n    }\r\n  }\r\n};\r\n\r\n// Get all items\r\nconst getAllItems = () => {\r\n  initStorage();\r\n  \r\n  if (typeof window !== 'undefined' && window.localStorage) {\r\n    // Browser environment\r\n    return JSON.parse(localStorage.getItem('formpilot_items') || '{}');\r\n  } else {\r\n    // Node.js environment\r\n    return memoryStorage.formpilot_items || {};\r\n  }\r\n};\r\n\r\n// Save all items\r\nconst saveAllItems = (items) => {\r\n  if (typeof window !== 'undefined' && window.localStorage) {\r\n    // Browser environment\r\n    localStorage.setItem('formpilot_items', JSON.stringify(items));\r\n  } else {\r\n    // Node.js environment\r\n    memoryStorage.formpilot_items = items;\r\n  }\r\n};\r\n\r\n// Get user from storage\r\nconst getUser = () => {\r\n  if (typeof window !== 'undefined' && window.localStorage) {\r\n    // Browser environment\r\n    try {\r\n      return JSON.parse(localStorage.getItem('user') || '{}');\r\n    } catch (error) {\r\n      return {};\r\n    }\r\n  } else {\r\n    // Node.js environment\r\n    return memoryStorage.user || {\r\n      apiKey: process.env.CRUD_API_KEY,\r\n      credits: 100\r\n    };\r\n  }\r\n};\r\n\r\n// Save user to storage\r\nconst saveUser = (user) => {\r\n  if (typeof window !== 'undefined' && window.localStorage) {\r\n    // Browser environment\r\n    localStorage.setItem('user', JSON.stringify(user));\r\n  } else {\r\n    // Node.js environment\r\n    memoryStorage.user = user;\r\n  }\r\n};\r\n\r\n// Generate a unique ID\r\nconst generateId = () => {\r\n  return Math.floor(Math.random() * 100000).toString();\r\n};\r\n\r\n/**\r\n * Create a new item\r\n * @param {Object} data - Data to create\r\n * @returns {Object} - Status response\r\n */\r\nconst create = async (data) => {\r\n  try {\r\n    // Check if credentials exist\r\n    const user = getUser();\r\n    if (!user.apiKey) {\r\n      return { error: 'Not authenticated. Please provide valid API credentials.' };\r\n    }\r\n    \r\n    // Decrement credits\r\n    if (user.credits <= 0) {\r\n      return { error: 'Insufficient credits. Please recharge your credits.' };\r\n    }\r\n    \r\n    // Update credits\r\n    user.credits--;\r\n    saveUser(user);\r\n    \r\n    // Create a new item\r\n    const items = getAllItems();\r\n    const id = generateId();\r\n    items[id] = { \r\n      ...data, \r\n      id, \r\n      createdAt: new Date().toISOString() \r\n    };\r\n    saveAllItems(items);\r\n    \r\n    return { id, status: \"created successfully\" };\r\n  } catch (error) {\r\n    console.error('Create operation failed:', error);\r\n    return { error: 'Failed to create item' };\r\n  }\r\n};\r\n\r\n/**\r\n * Get an item by ID\r\n * @param {string} id - Item ID\r\n * @returns {Object} - Item data\r\n */\r\nconst get = async (id) => {\r\n  try {\r\n    // Check if credentials exist\r\n    const user = getUser();\r\n    if (!user.apiKey) {\r\n      return { error: 'Not authenticated. Please provide valid API credentials.' };\r\n    }\r\n    \r\n    // Get item\r\n    const items = getAllItems();\r\n    const item = items[id];\r\n    \r\n    if (!item) {\r\n      return { error: 'Item not found' };\r\n    }\r\n    \r\n    return item;\r\n  } catch (error) {\r\n    console.error('Get operation failed:', error);\r\n    return { error: 'Failed to get item' };\r\n  }\r\n};\r\n\r\n/**\r\n * Update an item by ID\r\n * @param {string} id - Item ID\r\n * @param {Object} data - Updated data\r\n * @returns {Object} - Status response\r\n */\r\nconst update = async (id, data) => {\r\n  try {\r\n    // Check if credentials exist\r\n    const user = getUser();\r\n    if (!user.apiKey) {\r\n      return { error: 'Not authenticated. Please provide valid API credentials.' };\r\n    }\r\n    \r\n    // Decrement credits\r\n    if (user.credits <= 0) {\r\n      return { error: 'Insufficient credits. Please recharge your credits.' };\r\n    }\r\n    \r\n    // Update credits\r\n    user.credits--;\r\n    saveUser(user);\r\n    \r\n    // Update item\r\n    const items = getAllItems();\r\n    if (!items[id]) {\r\n      return { error: 'Item not found' };\r\n    }\r\n    \r\n    items[id] = { \r\n      ...items[id], \r\n      ...data, \r\n      updatedAt: new Date().toISOString() \r\n    };\r\n    saveAllItems(items);\r\n    \r\n    return { status: \"updated successfully\" };\r\n  } catch (error) {\r\n    console.error('Update operation failed:', error);\r\n    return { error: 'Failed to update item' };\r\n  }\r\n};\r\n\r\n/**\r\n * Delete an item by ID\r\n * @param {string} id - Item ID\r\n * @returns {Object} - Status response\r\n */\r\nconst delete_ = async (id) => {\r\n  try {\r\n    // Check if credentials exist\r\n    const user = getUser();\r\n    if (!user.apiKey) {\r\n      return { error: 'Not authenticated. Please provide valid API credentials.' };\r\n    }\r\n    \r\n    // Decrement credits\r\n    if (user.credits <= 0) {\r\n      return { error: 'Insufficient credits. Please recharge your credits.' };\r\n    }\r\n    \r\n    // Update credits\r\n    user.credits--;\r\n    saveUser(user);\r\n    \r\n    // Delete item\r\n    const items = getAllItems();\r\n    if (!items[id]) {\r\n      return { error: 'Item not found' };\r\n    }\r\n    \r\n    delete items[id];\r\n    saveAllItems(items);\r\n    \r\n    return { status: \"deleted successfully\" };\r\n  } catch (error) {\r\n    console.error('Delete operation failed:', error);\r\n    return { error: 'Failed to delete item' };\r\n  }\r\n};\r\n\r\n// Module exports\r\nmodule.exports = {\r\n  create,\r\n  get,\r\n  update,\r\n  delete: delete_\r\n};\r\n\r\n// If using in browser directly\r\nif (typeof window !== 'undefined') {\r\n  window.Crublibrary = {\r\n    create,\r\n    get,\r\n    update,\r\n    delete: delete_\r\n  };\r\n} "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}