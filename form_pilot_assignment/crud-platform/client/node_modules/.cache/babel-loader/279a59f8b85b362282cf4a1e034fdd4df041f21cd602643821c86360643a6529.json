{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\LENOVO\\\\Downloads\\\\form_pilot_assignment\\\\crud-platform\\\\client\\\\src\\\\components\\\\Login.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { Card, Button, Container, Row, Col, Alert } from 'react-bootstrap';\nimport { useAuth } from '../context/AuthContext';\n\n// Mock Google login implementation\n// In a real app, you would use the proper Google SDK\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst mockGoogleLogin = () => {\n  // Simulate Google login and return a mock token\n  return Promise.resolve('mock-google-token-12345');\n};\nconst Login = () => {\n  _s();\n  const {\n    login,\n    user,\n    loading,\n    error\n  } = useAuth();\n  const navigate = useNavigate();\n  useEffect(() => {\n    // If user is already logged in, redirect to dashboard\n    if (user) {\n      navigate('/dashboard');\n    }\n  }, [user, navigate]);\n  const handleGoogleLogin = async () => {\n    try {\n      // In a real app, this would use the Google OAuth flow\n      const googleToken = await mockGoogleLogin();\n      await login(googleToken);\n      navigate('/dashboard');\n    } catch (err) {\n      console.error('Login failed:', err);\n    }\n  };\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"text-center mt-5\",\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(Container, {\n    className: \"mt-5\",\n    children: /*#__PURE__*/_jsxDEV(Row, {\n      className: \"justify-content-center\",\n      children: /*#__PURE__*/_jsxDEV(Col, {\n        md: 6,\n        children: /*#__PURE__*/_jsxDEV(Card, {\n          className: \"shadow-sm\",\n          children: /*#__PURE__*/_jsxDEV(Card.Body, {\n            className: \"p-4\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"text-center mb-4\",\n              children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n                children: \"Sign In\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 46,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"text-muted\",\n                children: \"Use your Google account to sign in\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 47,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 45,\n              columnNumber: 15\n            }, this), error && /*#__PURE__*/_jsxDEV(Alert, {\n              variant: \"danger\",\n              children: error\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 50,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"d-grid\",\n              children: /*#__PURE__*/_jsxDEV(Button, {\n                variant: \"primary\",\n                size: \"lg\",\n                onClick: handleGoogleLogin,\n                className: \"mb-3\",\n                children: [/*#__PURE__*/_jsxDEV(\"i\", {\n                  className: \"bi bi-google me-2\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 59,\n                  columnNumber: 19\n                }, this), \" Sign in with Google\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 53,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 52,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"text-center mt-3\",\n              children: /*#__PURE__*/_jsxDEV(\"small\", {\n                className: \"text-muted\",\n                children: \"By signing in, you'll get your API Key and URL for the CRUD API Platform\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 64,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 63,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this);\n};\n_s(Login, \"FbgcO3kxujPqXSCztXa8JX+ErlY=\", false, function () {\n  return [useAuth, useNavigate];\n});\n_c = Login;\nexport default Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["React","useEffect","useNavigate","Card","Button","Container","Row","Col","Alert","useAuth","jsxDEV","_jsxDEV","mockGoogleLogin","Promise","resolve","Login","_s","login","user","loading","error","navigate","handleGoogleLogin","googleToken","err","console","className","children","fileName","_jsxFileName","lineNumber","columnNumber","md","Body","variant","size","onClick","_c","$RefreshReg$"],"sources":["C:/Users/LENOVO/Downloads/form_pilot_assignment/crud-platform/client/src/components/Login.tsx"],"sourcesContent":["import React, { useEffect } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { Card, Button, Container, Row, Col, Alert } from 'react-bootstrap';\r\nimport { useAuth } from '../context/AuthContext';\r\n\r\n// Mock Google login implementation\r\n// In a real app, you would use the proper Google SDK\r\nconst mockGoogleLogin = () => {\r\n  // Simulate Google login and return a mock token\r\n  return Promise.resolve('mock-google-token-12345');\r\n};\r\n\r\nconst Login: React.FC = () => {\r\n  const { login, user, loading, error } = useAuth();\r\n  const navigate = useNavigate();\r\n\r\n  useEffect(() => {\r\n    // If user is already logged in, redirect to dashboard\r\n    if (user) {\r\n      navigate('/dashboard');\r\n    }\r\n  }, [user, navigate]);\r\n\r\n  const handleGoogleLogin = async () => {\r\n    try {\r\n      // In a real app, this would use the Google OAuth flow\r\n      const googleToken = await mockGoogleLogin();\r\n      await login(googleToken);\r\n      navigate('/dashboard');\r\n    } catch (err) {\r\n      console.error('Login failed:', err);\r\n    }\r\n  };\r\n\r\n  if (loading) {\r\n    return <div className=\"text-center mt-5\">Loading...</div>;\r\n  }\r\n\r\n  return (\r\n    <Container className=\"mt-5\">\r\n      <Row className=\"justify-content-center\">\r\n        <Col md={6}>\r\n          <Card className=\"shadow-sm\">\r\n            <Card.Body className=\"p-4\">\r\n              <div className=\"text-center mb-4\">\r\n                <h2>Sign In</h2>\r\n                <p className=\"text-muted\">Use your Google account to sign in</p>\r\n              </div>\r\n              \r\n              {error && <Alert variant=\"danger\">{error}</Alert>}\r\n\r\n              <div className=\"d-grid\">\r\n                <Button \r\n                  variant=\"primary\" \r\n                  size=\"lg\"\r\n                  onClick={handleGoogleLogin}\r\n                  className=\"mb-3\"\r\n                >\r\n                  <i className=\"bi bi-google me-2\"></i> Sign in with Google\r\n                </Button>\r\n              </div>\r\n\r\n              <div className=\"text-center mt-3\">\r\n                <small className=\"text-muted\">\r\n                  By signing in, you'll get your API Key and URL for the CRUD API Platform\r\n                </small>\r\n              </div>\r\n            </Card.Body>\r\n          </Card>\r\n        </Col>\r\n      </Row>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default Login; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}