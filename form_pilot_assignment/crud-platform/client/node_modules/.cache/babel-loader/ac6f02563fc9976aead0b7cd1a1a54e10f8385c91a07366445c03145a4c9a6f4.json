{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\LENOVO\\\\Downloads\\\\form_pilot_assignment\\\\crud-platform\\\\client\\\\src\\\\components\\\\ApiKeyManager.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { Card, Container, Row, Col, Button, Alert, Form } from 'react-bootstrap';\nimport { useNavigate } from 'react-router-dom';\nimport { useAuth } from '../context/AuthContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ApiKeyManager = () => {\n  _s();\n  const {\n    user\n  } = useAuth();\n  const [isGenerating, setIsGenerating] = useState(false);\n  const [error, setError] = useState(null);\n  const [success, setSuccess] = useState(null);\n  const navigate = useNavigate();\n  const generateNewApiKey = async () => {\n    if (!user) return;\n    setIsGenerating(true);\n    setError(null);\n    try {\n      // Mock API call - in a real app this would call your backend\n      await new Promise(resolve => setTimeout(resolve, 500));\n      setSuccess('New API key generated successfully!');\n    } catch (err) {\n      setError(err.message || 'Failed to generate new API key');\n    } finally {\n      setIsGenerating(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: /*#__PURE__*/_jsxDEV(Row, {\n      className: \"justify-content-center mt-4\",\n      children: /*#__PURE__*/_jsxDEV(Col, {\n        md: 8,\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"mb-4\",\n          children: \"API Key Management\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Card, {\n          className: \"shadow-sm mb-4\",\n          children: /*#__PURE__*/_jsxDEV(Card.Body, {\n            children: [/*#__PURE__*/_jsxDEV(Card.Title, {\n              children: \"Your API Key\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 39,\n              columnNumber: 15\n            }, this), error && /*#__PURE__*/_jsxDEV(Alert, {\n              variant: \"danger\",\n              children: error\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 41,\n              columnNumber: 25\n            }, this), success && /*#__PURE__*/_jsxDEV(Alert, {\n              variant: \"success\",\n              children: success\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 42,\n              columnNumber: 27\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"d-flex mb-3\",\n              children: [/*#__PURE__*/_jsxDEV(Form.Control, {\n                type: \"text\",\n                value: \"sample-api-key-for-testing\",\n                readOnly: true\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 45,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Button, {\n                variant: \"outline-secondary\",\n                className: \"ms-2\",\n                onClick: () => navigator.clipboard.writeText('sample-api-key-for-testing'),\n                children: \"Copy\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 50,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 44,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"text-muted small\",\n              children: \"This key allows access to the CRUD API. Keep it secure and don't share it publicly.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 59,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              variant: \"warning\",\n              onClick: generateNewApiKey,\n              disabled: isGenerating,\n              children: isGenerating ? 'Generating...' : 'Generate New Key'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 63,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              variant: \"link\",\n              className: \"ms-2\",\n              onClick: () => navigate('/dashboard'),\n              children: \"Back to Dashboard\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 70,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this);\n};\n_s(ApiKeyManager, \"ACuRTk6pWla9+sgBWEF8hs0fq6w=\", false, function () {\n  return [useAuth, useNavigate];\n});\n_c = ApiKeyManager;\nexport default ApiKeyManager;\nvar _c;\n$RefreshReg$(_c, \"ApiKeyManager\");","map":{"version":3,"names":["React","useState","Card","Container","Row","Col","Button","Alert","Form","useNavigate","useAuth","jsxDEV","_jsxDEV","ApiKeyManager","_s","user","isGenerating","setIsGenerating","error","setError","success","setSuccess","navigate","generateNewApiKey","Promise","resolve","setTimeout","err","message","children","className","md","fileName","_jsxFileName","lineNumber","columnNumber","Body","Title","variant","Control","type","value","readOnly","onClick","navigator","clipboard","writeText","disabled","_c","$RefreshReg$"],"sources":["C:/Users/LENOVO/Downloads/form_pilot_assignment/crud-platform/client/src/components/ApiKeyManager.tsx"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { Card, Container, Row, Col, Button, Alert, Form } from 'react-bootstrap';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { useAuth } from '../context/AuthContext';\r\nimport axios from 'axios';\r\n\r\nconst ApiKeyManager: React.FC = () => {\r\n  const { user } = useAuth();\r\n  const [isGenerating, setIsGenerating] = useState(false);\r\n  const [error, setError] = useState<string | null>(null);\r\n  const [success, setSuccess] = useState<string | null>(null);\r\n  const navigate = useNavigate();\r\n\r\n  const generateNewApiKey = async () => {\r\n    if (!user) return;\r\n    \r\n    setIsGenerating(true);\r\n    setError(null);\r\n    \r\n    try {\r\n      // Mock API call - in a real app this would call your backend\r\n      await new Promise(resolve => setTimeout(resolve, 500));\r\n      setSuccess('New API key generated successfully!');\r\n    } catch (err: any) {\r\n      setError(err.message || 'Failed to generate new API key');\r\n    } finally {\r\n      setIsGenerating(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Container>\r\n      <Row className=\"justify-content-center mt-4\">\r\n        <Col md={8}>\r\n          <h1 className=\"mb-4\">API Key Management</h1>\r\n          \r\n          <Card className=\"shadow-sm mb-4\">\r\n            <Card.Body>\r\n              <Card.Title>Your API Key</Card.Title>\r\n              \r\n              {error && <Alert variant=\"danger\">{error}</Alert>}\r\n              {success && <Alert variant=\"success\">{success}</Alert>}\r\n              \r\n              <div className=\"d-flex mb-3\">\r\n                <Form.Control \r\n                  type=\"text\" \r\n                  value=\"sample-api-key-for-testing\" \r\n                  readOnly\r\n                />\r\n                <Button \r\n                  variant=\"outline-secondary\" \r\n                  className=\"ms-2\"\r\n                  onClick={() => navigator.clipboard.writeText('sample-api-key-for-testing')}\r\n                >\r\n                  Copy\r\n                </Button>\r\n              </div>\r\n              \r\n              <p className=\"text-muted small\">\r\n                This key allows access to the CRUD API. Keep it secure and don't share it publicly.\r\n              </p>\r\n              \r\n              <Button \r\n                variant=\"warning\" \r\n                onClick={generateNewApiKey}\r\n                disabled={isGenerating}\r\n              >\r\n                {isGenerating ? 'Generating...' : 'Generate New Key'}\r\n              </Button>\r\n              <Button \r\n                variant=\"link\" \r\n                className=\"ms-2\"\r\n                onClick={() => navigate('/dashboard')}\r\n              >\r\n                Back to Dashboard\r\n              </Button>\r\n            </Card.Body>\r\n          </Card>\r\n        </Col>\r\n      </Row>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default ApiKeyManager; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}